{"version":3,"sources":["api/project/project.events.js"],"names":["ProjectEvents","setMaxListeners","events","save","remove","e","event","schema","post","emitEvent","doc","emit","_id","SubjectEvents"],"mappings":"AAAA;;;;AAIA;;;;;;AAEA;;AACA;;;;;;AACA,IAAIA,gBAAgB,0BAApB;;AAEA;AACAA,cAAcC,eAAd,CAA8B,CAA9B;;AAEA;AACA,IAAIC,SAAS;AACXC,QAAM,MADK;AAEXC,UAAQ;AAFG,CAAb;;AAKA;AACA,KAAI,IAAIC,CAAR,IAAaH,MAAb,EAAqB;AACnB,MAAII,QAAQJ,OAAOG,CAAP,CAAZ;AACA,oBAAQE,MAAR,CAAeC,IAAf,CAAoBH,CAApB,EAAuBI,UAAUH,KAAV,CAAvB;AACD;;AAED,SAASG,SAAT,CAAmBH,KAAnB,EAA0B;AACxB,SAAO,UAASI,GAAT,EAAc;AACnBV,kBAAcW,IAAd,CAAsBL,KAAtB,SAA+BI,IAAIE,GAAnC,EAA0CF,GAA1C;AACAV,kBAAcW,IAAd,CAAmBL,KAAnB,EAA0BI,GAA1B;AACD,GAHD;AAID;;kBAEcG,a","file":"api/project/project.events.js","sourcesContent":["/**\n * Project model events\n */\n\n'use strict';\n\nimport {EventEmitter} from 'events';\nimport Project from './project.model';\nvar ProjectEvents = new EventEmitter();\n\n// Set max event listeners (0 == unlimited)\nProjectEvents.setMaxListeners(0);\n\n// Model events\nvar events = {\n  save: 'save',\n  remove: 'remove'\n};\n\n// Register the event emitter to the model events\nfor(var e in events) {\n  let event = events[e];\n  Project.schema.post(e, emitEvent(event));\n}\n\nfunction emitEvent(event) {\n  return function(doc) {\n    ProjectEvents.emit(`${event}:${doc._id}`, doc);\n    ProjectEvents.emit(event, doc);\n  };\n}\n\nexport default SubjectEvents;\n"],"sourceRoot":"/source/"}